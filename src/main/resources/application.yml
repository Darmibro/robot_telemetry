spring:
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: telemetry-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: '*'

  datasource:
    url: jdbc:postgresql://localhost:5432/telemetry
    username: robot
    password: robot123
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      #jakarta.persistence.jdbc.url: jdbc:postgresql://postgres:5432/telemetry
      hibernate:
        format_sql: true

server:
  port: 8080
  servlet:
    context-path: /api

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.robotfleet: DEBUG
  file:
    name: logs/fleet.log

websocket:
  endpoint: /ws/telemetry
  allowed-origins: "*"

management:
  endpoints:
    web:
      exposure:
        include: health, info
