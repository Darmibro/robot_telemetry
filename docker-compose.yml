version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/telemetry
      POSTGRES_DB: telemetry
      POSTGRES_USER: robot
      POSTGRES_PASSWORD: robot123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: robot_zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: robot_kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: robot_zookeeper:2181
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@robot_kafka:9093
      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafka-consumer:
    build:
      context: .
    container_name: kafka-consumer
    depends_on:
      - kafka
      - postgres
    ports:
      - "8082:8082"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: robot_kafka:9092
      POSTGRES_URL: jdbc:postgresql://postgres:5432/telemetry
      POSTGRES_USER: robot
      POSTGRES_PASSWORD: robot123

  kafka-producer:
    build:
      context: .
    container_name: kafka-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: robot_kafka:9092

volumes:
  pgdata: